---
id: 19-010r2
title:
- type: title-main
  content: 'OGC Testbed-15: Styles API Engineering Report'
  language:
  - en
  script:
  - Latn
  format: text/plain
- type: main
  content: 'OGC Testbed-15: Styles API Engineering Report'
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: http://docs.opengeospatial.org/per/19-010r2.html
  type: obp
type: standard
docid:
- id: 19-010r2
  type: OGC
  primary: true
date:
- type: published
  value: '2019-12-12'
contributor:
- person:
    name:
      completename: Clemens Portele
  role:
  - author
- organization:
    name:
    - Open Geospatial Consortium
  role:
  - publisher
edition: '2'
revdate: '2019-12-12'
language:
- en
script:
- Latn
abstract:
- content: "This document is a proof of concept of a draft specification of the OGC
    Styles Application Programming Interface (API) that defines a Web API that enables
    map servers and clients as well as visual style editors to manage and fetch styles.\r\n\r\nWeb
    APIs are software interfaces that use an architectural style that is founded on
    the technologies of the Web. Styles consist of symbolizing instructions that are
    applied by a rendering engine on features and/or coverages.\r\n\r\nThe Styles
    API supports several types of consumers, mainly:\r\n\r\nVisual style editors that
    create, update and delete styles for datasets that are shared by other Web APIs
    implementing the OGC API - Features - Part 1: Core standard or the draft OGC API
    - Coverages or draft OGC API - Tiles specifications;\r\n\r\nWeb APIs implementing
    the draft OGC API - Maps specification fetch styles and render spatial data (features
    or coverages) on the server;\r\n\r\nMap clients that fetch styles and render spatial
    data (features or coverages) on the client.\r\n\r\nFeature data is either accessed
    directly or organized into spatial partitions such as a tiled data store (aka
    vector tiles).\r\n\r\nThe Styles API is consistent with the emerging OGC API family
    of standards.\r\n\r\nThe Styles API implements the conceptual model for style
    encodings and style metadata as documented in chapter 6 of the OGC Testbed-15:
    Encoding and Metadata Conceptual Model for Styles Engineering Report.\r\n\r\nThe
    model defines three main concepts:\r\n\r\nThe style is the main resource.\r\n\r\nEach
    style is available in one or more stylesheets - the representation of a style
    in an encoding like OGC SLD 1.0 or Mapbox Style. Clients will use the stylesheet
    of a style that fits best based on the capabilities of available tools and their
    preferences.\r\n\r\nFor each style there is style metadata available, with general
    descriptive information about the style, structural information (e.g., layers
    and attributes), and so forth to allow users to discover and select existing styles
    for their data."
  language:
  - en
  script:
  - Latn
  format: text/plain
fetched: '2022-04-19'
doctype: engineering-report
editorialgroup:
  committee: technical
