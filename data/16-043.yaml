---
id: 16-043
title:
- type: title-main
  content: Testbed-12 Web Integration Service
  language:
  - en
  script:
  - Latn
  format: text/plain
- type: main
  content: Testbed-12 Web Integration Service
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: http://docs.opengeospatial.org/per/16-043.html
  type: obp
type: standard
docid:
- id: 16-043
  type: OGC
  primary: true
date:
- type: published
  value: '2017-03-10'
contributor:
- person:
    name:
      completename: Panagiotis (Peter) A. Vretanos
  role:
  - author
- organization:
    name:
    - Open Geospatial Consortium
  role:
  - publisher
revdate: '2017-03-10'
language:
- en
script:
- Latn
abstract:
- content: "For many years OGC has been developing a suite of standards defining web
    services interfaces and encodings for geospatial processing. The suite includes
    a Web Map Service (WMS), a Web Map Tiling Service (WMTS), a Web Feature Service
    (WFS), a Web Coverage Service (WCS), a Web Catalogue Service (CSW), the Sensor
    Web (SWE) suite of services, etc. These service interfaces and their implementations
    have, more or less, been developed independently of one another resulting in isolation
    and poor integration between them. For example, consider a map generated by a
    WMS. A client or user cannot easily determine which source data was used to create
    the map and how to download that source data though an OGC data service such as
    WFS or WCS. Furthermore when one considers the Publish-Find-Bind paradigm, OGC
    can only partially support the full potential of this paradigm. This is because
    OGC structured catalogues can only register services in isolation of other related
    services and cannot automatically determine the relationships among services and
    the resources they offer.\r\n\r\nIn order to achieve better integration between
    OGC web services and enhance the publish-find-bind paradigm, this OGC Engineering
    Report defines and discusses three key elements. These are:\r\n\r\nDefining a
    new service, called the Web Integration Service (WIS), which allows for the discovery
    and access to integrated sets of OGC web services deployed at an endpoint.\r\n\r\nSpecifying
    a means of discovering and describing associations between web resources (both
    OGC and non-OGC).\r\n\r\nDefining extensions to the OGC catalogue to allow the
    service to harvest and make discoverable a rich set of linked OGC and non-OGC
    resources.\r\n\r\nThe Web Integration Service (WIS) is an aggregation service
    whose only purpose is to provide a list of references to a suite of other, perhaps
    related OGC services available at an endpoint.\r\n\r\nA new operation, named GetAssociations,
    is defined as an extension such that existing OGC services (WMS, WFS, WCS, etc.)
    may implement this operation in order to support rich auto-discovery. This operation
    enables OGC web services to externalize their internal association knowledge about
    their content and relationships to other OGC and external resources. For example,
    a WMS would know if the source data for a layer it offers is a Shapefile, or a
    WFS feature type, or another WMS layer (i.e. cascading), or if a WMTS layer exists
    that renders the same information more efficiently. This internal knowledge can
    now be externalized via the GetAssociations operation.\r\n\r\nCurrently, OGC Catalogues
    Service instances can harvest the capabilities document of an OGC web service,
    register that service, register the existence of the individual offerings that
    the service offers and also register the association between the service and the
    content it offers. Thus, the entire harvesting process is focused on a single
    OGC web service and consequently offers a limited scope of discovery. In order
    to support rich discovery, a catalogue needs to be able to automatically register
    services found at an endpoint as well as register all known associations among
    those services, their offerings and other OGC and non-OGC resources. This involves
    harvesting a serviceâ€™s capabilities document to determine what content the service
    offers but it also involves further interrogating the service to determine of
    what (if any) other associations it is aware. Populated with this enhanced knowledge
    a client may now use a catalogue to, for example, find the description of feature
    data and then be able to find the WFS that offer that data, a WMS that renders
    those features into a map, a WMTS that has a tiled representation of that data,
    etc. In order to support this kind of rich discovery, a new CSW-ebRIM package
    is specified that defines ebRIM object types, associations, classifications and
    stored queries that support the description of integrated OGC web service and
    their artifacts within the catalogue."
  language:
  - en
  script:
  - Latn
  format: text/plain
fetched: '2022-04-30'
doctype: engineering-report
editorialgroup:
  committee: technical
